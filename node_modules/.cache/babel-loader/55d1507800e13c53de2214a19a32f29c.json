{"ast":null,"code":"/**\n * @fileoverview Extend node util module\n * @author douzi <liaowei08@gmail.com> \n */\nvar util = require('util');\n\nvar toString = Object.prototype.toString;\nvar isWindows = process.platform === 'win32';\n\nfunction isObject(value) {\n  return toString.call(value) === '[object Object]';\n} // And type check method: isFunction, isString, isNumber, isDate, isRegExp, isObject\n\n\n['Function', 'String', 'Number', 'Date', 'RegExp'].forEach(function (item) {\n  exports['is' + item] = function (value) {\n    return toString.call(value) === '[object ' + item + ']';\n  };\n});\n/**\n * @description\n * Deep extend\n * @example\n * extend({ key: { k1: 'v1'} }, { key: { k2: 'v2' }, none: { k: 'v' } });\n * extend({ arr: [] }, { arr: [ {}, {} ] });\n */\n\nfunction extend(target, source) {\n  var value;\n\n  for (var key in source) {\n    value = source[key];\n\n    if (Array.isArray(value)) {\n      if (!Array.isArray(target[key])) {\n        target[key] = [];\n      }\n\n      extend(target[key], value);\n    } else if (isObject(value)) {\n      if (!isObject(target[key])) {\n        target[key] = {};\n      }\n\n      extend(target[key], value);\n    } else {\n      target[key] = value;\n    }\n  }\n\n  return target;\n}\n\nextend(exports, util); // fixed util.isObject \n\nexports.isObject = isObject;\n\nexports.extend = function () {\n  var args = Array.prototype.slice.call(arguments, 0);\n  var target = args.shift();\n  args.forEach(function (item) {\n    extend(target, item);\n  });\n  return target;\n};\n\nexports.isArray = Array.isArray;\n\nexports.isUndefined = function (value) {\n  return typeof value == 'undefined';\n};\n\nexports.noop = function () {};\n\nexports.unique = function (array) {\n  var result = [];\n  array.forEach(function (item) {\n    if (result.indexOf(item) == -1) {\n      result.push(item);\n    }\n  });\n  return result;\n};\n\nexports.escape = function (value) {\n  return String(value).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n};\n\nexports.unescape = function (value) {\n  return String(value).replace(/&amp;/g, '&').replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\").replace(/&lt;/g, '<').replace(/&gt;/g, '>');\n};\n\nexports.hrtime = function (time) {\n  if (time) {\n    var spend = process.hrtime(time);\n    spend = (spend[0] + spend[1] / 1e9) * 1000 + 'ms';\n    return spend;\n  } else {\n    return process.hrtime();\n  }\n};\n/**\n * @description\n * Return a copy of the object with list keys\n * @example\n * util.pick({ key: 'value' }, 'key', 'key1');\n * util.pick(obj, function(value, key, object) { });\n */\n\n\nexports.pick = function (obj, iteratee) {\n  var result = {};\n\n  if (exports.isFunction(iteratee)) {\n    for (var key in obj) {\n      var value = obj[key];\n\n      if (iteratee(value, key, obj)) {\n        result[key] = value;\n      }\n    }\n  } else {\n    var keys = Array.prototype.slice.call(arguments, 1);\n    keys.forEach(function (key) {\n      if (key in obj) {\n        result[key] = obj[key];\n      }\n    });\n  }\n\n  return result;\n};\n\nexports.path = {};\n\nif (isWindows) {\n  // Regex to split a windows path into three parts: [*, device, slash,\n  // tail] windows-only\n  var splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\n  exports.path.isAbsolute = function (filepath) {\n    var result = splitDeviceRe.exec(filepath),\n        device = result[1] || '',\n        isUnc = !!device && device.charAt(1) !== ':'; // UNC paths are always absolute\n\n    return !!result[2] || isUnc;\n  }; // Normalize \\\\ paths to / paths.\n\n\n  exports.path.unixifyPath = function (filepath) {\n    return filepath.replace(/\\\\/g, '/');\n  };\n} else {\n  exports.path.isAbsolute = function (filepath) {\n    return filepath.charAt(0) === '/';\n  };\n\n  exports.path.unixifyPath = function (filepath) {\n    return filepath;\n  };\n}","map":{"version":3,"sources":["D:/Projects/maskdetector/node_modules/utils-extend/index.js"],"names":["util","require","toString","Object","prototype","isWindows","process","platform","isObject","value","call","forEach","item","exports","extend","target","source","key","Array","isArray","args","slice","arguments","shift","isUndefined","noop","unique","array","result","indexOf","push","escape","String","replace","unescape","hrtime","time","spend","pick","obj","iteratee","isFunction","keys","path","splitDeviceRe","isAbsolute","filepath","exec","device","isUnc","charAt","unixifyPath"],"mappings":"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","sourcesContent":["/**\n * @fileoverview Extend node util module\n * @author douzi <liaowei08@gmail.com> \n */\nvar util = require('util');\nvar toString = Object.prototype.toString;\nvar isWindows = process.platform === 'win32';\n\nfunction isObject(value) {\n  return toString.call(value) === '[object Object]';\n}\n\n// And type check method: isFunction, isString, isNumber, isDate, isRegExp, isObject\n['Function', 'String', 'Number', 'Date', 'RegExp'].forEach(function(item) {\n  exports['is' + item]  = function(value) {\n    return toString.call(value) === '[object ' + item + ']';\n  };\n});\n\n/**\n * @description\n * Deep extend\n * @example\n * extend({ key: { k1: 'v1'} }, { key: { k2: 'v2' }, none: { k: 'v' } });\n * extend({ arr: [] }, { arr: [ {}, {} ] });\n */\nfunction extend(target, source) {\n  var value;\n\n  for (var key in source) {\n    value = source[key];\n\n    if (Array.isArray(value)) {\n      if (!Array.isArray(target[key])) {\n        target[key] = [];\n      }\n\n      extend(target[key], value);\n    } else if (isObject(value)) {\n      if (!isObject(target[key])) {\n        target[key]  = {};\n      }\n\n      extend(target[key], value);\n    } else {\n      target[key] = value;\n    }\n  }\n\n  return target;\n}\n\nextend(exports, util);\n\n// fixed util.isObject \nexports.isObject = isObject;\n\nexports.extend = function() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  var target = args.shift();\n\n  args.forEach(function(item) {\n    extend(target, item);\n  });\n\n  return target;\n};\n\nexports.isArray = Array.isArray;\n\nexports.isUndefined = function(value) {\n  return typeof value == 'undefined';\n};\n\nexports.noop = function() {};\n\nexports.unique = function(array) {\n  var result = [];\n\n  array.forEach(function(item) {\n    if (result.indexOf(item) == -1) {\n      result.push(item);\n    }\n  });\n\n  return result;\n};\n\nexports.escape = function(value) {\n  return String(value)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n};\n\nexports.unescape = function(value) {\n  return String(value)\n    .replace(/&amp;/g, '&')\n    .replace(/&quot;/g, '\"')\n    .replace(/&#39;/g, \"'\")\n    .replace(/&lt;/g, '<')\n    .replace(/&gt;/g, '>');\n};\n\nexports.hrtime = function(time) {\n  if (time) {\n    var spend = process.hrtime(time);\n    \n    spend = (spend[0] + spend[1] / 1e9) * 1000 + 'ms';\n\n    return spend;\n  } else {\n    return process.hrtime();\n  }\n};\n\n/**\n * @description\n * Return a copy of the object with list keys\n * @example\n * util.pick({ key: 'value' }, 'key', 'key1');\n * util.pick(obj, function(value, key, object) { });\n */\nexports.pick = function(obj, iteratee) {\n  var result = {};\n\n  if (exports.isFunction(iteratee)) {\n    for (var key in obj) {\n      var value = obj[key];\n      if (iteratee(value, key, obj)) {\n        result[key] = value;\n      }\n    }\n  } else {\n    var keys = Array.prototype.slice.call(arguments, 1);\n\n    keys.forEach(function(key) {\n      if (key in obj) {\n        result[key] = obj[key];\n      }\n    });\n  }\n\n  return result;\n};\n\nexports.path = {};\n\nif (isWindows) {\n  // Regex to split a windows path into three parts: [*, device, slash,\n  // tail] windows-only\n  var splitDeviceRe =\n      /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\n  exports.path.isAbsolute = function(filepath) {\n    var result = splitDeviceRe.exec(filepath),\n        device = result[1] || '',\n        isUnc = !!device && device.charAt(1) !== ':';\n    // UNC paths are always absolute\n    return !!result[2] || isUnc;\n  };\n\n  // Normalize \\\\ paths to / paths.\n  exports.path.unixifyPath = function(filepath) {\n    return filepath.replace(/\\\\/g, '/');\n  };\n\n} else {\n  exports.path.isAbsolute = function(filepath) {\n    return filepath.charAt(0) === '/';\n  };\n\n  exports.path.unixifyPath = function(filepath) {\n    return filepath;\n  };\n}"]},"metadata":{},"sourceType":"script"}