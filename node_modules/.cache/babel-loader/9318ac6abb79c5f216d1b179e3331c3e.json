{"ast":null,"code":"var fs = require('file-system');\n\nvar path = require('path');\n\nvar request = require('ajax-request');\n\nfunction base64(filename, data) {\n  var extname = path.extname(filename).substr(1);\n  extname = extname || 'png';\n\n  if (extname === 'svg') {\n    extname = \"svg+xml\";\n  }\n\n  return 'data:image/' + extname + ';base64,' + data.toString('base64');\n}\n\nfunction img(data) {\n  var reg = /^data:image\\/([\\w+]+);base64,([\\s\\S]+)/;\n  var match = data.match(reg);\n  var baseType = {\n    jpeg: 'jpg'\n  };\n  baseType['svg+xml'] = 'svg';\n\n  if (!match) {\n    throw new Error('image base64 data error');\n  }\n\n  var extname = baseType[match[1]] ? baseType[match[1]] : match[1];\n  return {\n    extname: '.' + extname,\n    base64: match[2]\n  };\n}\n/**\n * @description\n * Get image file base64 data\n * @example\n * base64Img.base64('path/demo.png', function(err, data) {})\n */\n\n\nexports.base64 = function (filename, callback) {\n  if (!callback) callback = util.noop;\n  fs.readFile(filename, function (err, data) {\n    if (err) return callback(err);\n    callback(null, base64(filename, data));\n  });\n};\n/**\n * @description\n * The api same as base64, but it's synchronous\n * @example\n * var data = base64Img.base64Sync('path/demo.png');\n */\n\n\nexports.base64Sync = function (filename) {\n  var data = fs.readFileSync(filename);\n  return base64(filename, data);\n};\n/**\n * @description\n * Get base64 from url\n * @example\n * request.base64(\n *   'http://webresource.c-ctrip.com/ResCRMOnline/R5/html5/images/57.png', \n *   function(err, res, body) {\n * \n *   }\n * );\n */\n\n\nexports.requestBase64 = function (url, callback) {\n  request({\n    url: url,\n    isBuffer: true\n  }, function (err, res, body) {\n    if (err) return callback(err);\n    var data = 'data:' + res.headers['content-type'] + ';base64,' + body.toString('base64');\n    callback(err, res, data);\n  });\n};\n/**\n * @description\n * Convert image base64 data to img\n * @example\n * base64Img.img('data:image/png;base64,...', 'dest', '1', function(err, filepath) {});\n */\n\n\nexports.img = function (data, destpath, name, callback) {\n  var result = img(data);\n  var filepath = path.join(destpath, name + result.extname);\n  fs.writeFile(filepath, result.base64, {\n    encoding: 'base64'\n  }, function (err) {\n    callback(err, filepath);\n  });\n};\n/**\n * @description\n * The api same as img, but it's synchronous\n * @example\n * var filepath = base64Img.imgSync('data:image/png;base64,...', 'dest', '1');\n */\n\n\nexports.imgSync = function (data, destpath, name) {\n  var result = img(data);\n  var filepath = path.join(destpath, name + result.extname);\n  fs.writeFileSync(filepath, result.base64, {\n    encoding: 'base64'\n  });\n  return filepath;\n};","map":{"version":3,"sources":["D:/Projects/maskdetector/node_modules/base64-img/base64-img.js"],"names":["fs","require","path","request","base64","filename","data","extname","substr","toString","img","reg","match","baseType","jpeg","Error","exports","callback","util","noop","readFile","err","base64Sync","readFileSync","requestBase64","url","isBuffer","res","body","headers","destpath","name","result","filepath","join","writeFile","encoding","imgSync","writeFileSync"],"mappings":"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","sourcesContent":["var fs = require('file-system');\nvar path = require('path');\nvar request = require('ajax-request');\n\nfunction base64(filename, data) {\n  var extname = path.extname(filename).substr(1);\n  extname = extname || 'png';\n\n  if (extname === 'svg') {\n    extname = \"svg+xml\"\n  }\n  \n  return 'data:image/' + extname + ';base64,' + data.toString('base64');\n}\n\nfunction img(data) {\n  var reg = /^data:image\\/([\\w+]+);base64,([\\s\\S]+)/;\n  var match = data.match(reg);\n  var baseType = {\n    jpeg: 'jpg'\n  };\n\n  baseType['svg+xml'] = 'svg'\n\n  if (!match) {\n    throw new Error('image base64 data error');\n  }\n\n  var extname = baseType[match[1]] ? baseType[match[1]] : match[1];\n\n  return {\n    extname: '.' + extname,\n    base64: match[2]\n  };\n}\n\n/**\n * @description\n * Get image file base64 data\n * @example\n * base64Img.base64('path/demo.png', function(err, data) {})\n */\nexports.base64 = function(filename, callback) {\n  if (!callback) callback = util.noop;\n\n  fs.readFile(filename, function(err, data) {\n    if (err) return callback(err);\n\n    callback(null, base64(filename, data));\n  });\n};\n\n/**\n * @description\n * The api same as base64, but it's synchronous\n * @example\n * var data = base64Img.base64Sync('path/demo.png');\n */\nexports.base64Sync = function(filename) {\n  var data = fs.readFileSync(filename);\n\n  return base64(filename, data);\n};\n\n/**\n * @description\n * Get base64 from url\n * @example\n * request.base64(\n *   'http://webresource.c-ctrip.com/ResCRMOnline/R5/html5/images/57.png', \n *   function(err, res, body) {\n * \n *   }\n * );\n */\nexports.requestBase64 = function(url, callback) {\n  request({\n    url: url,\n    isBuffer: true\n  }, function (err, res, body) {\n    if (err) return callback(err);\n\n    var data = 'data:' + res.headers['content-type'] + ';base64,' + body.toString('base64');\n    callback(err, res, data);\n  });\n};\n\n/**\n * @description\n * Convert image base64 data to img\n * @example\n * base64Img.img('data:image/png;base64,...', 'dest', '1', function(err, filepath) {});\n */\nexports.img = function(data, destpath, name, callback) {\n  var result = img(data);\n  var filepath = path.join(destpath, name + result.extname);\n\n  fs.writeFile(filepath, result.base64, { encoding: 'base64' }, function(err) {\n    callback(err, filepath);\n  });\n};\n\n/**\n * @description\n * The api same as img, but it's synchronous\n * @example\n * var filepath = base64Img.imgSync('data:image/png;base64,...', 'dest', '1');\n */\nexports.imgSync = function(data, destpath, name) {\n  var result = img(data);\n  var filepath = path.join(destpath, name + result.extname);\n\n  fs.writeFileSync(filepath, result.base64, { encoding: 'base64' });\n  return filepath;\n};"]},"metadata":{},"sourceType":"script"}