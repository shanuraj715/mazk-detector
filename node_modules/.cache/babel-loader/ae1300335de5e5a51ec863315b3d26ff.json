{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, PadV2 } from '@tensorflow/tfjs-core';\nimport { PadProgram } from '../pad_gpu';\nimport { PadPackedProgram } from '../pad_packed_gpu';\nexport const padV2 = args => {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    paddings,\n    constantValue\n  } = attrs;\n  const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new PadPackedProgram(x.shape, paddings, constantValue) : new PadProgram(x.shape, paddings, constantValue);\n  const customSetup = program.getCustomSetupFunc(constantValue);\n  return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n};\nexport const padV2Config = {\n  kernelName: PadV2,\n  backendName: 'webgl',\n  kernelFunc: padV2\n};","map":{"version":3,"sources":["../../src/kernels/PadV2.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,GAAR,EAAuC,KAAvC,QAAwF,uBAAxF;AAGA,SAAQ,UAAR,QAAyB,YAAzB;AACA,SAAQ,gBAAR,QAA+B,mBAA/B;AAEA,OAAO,MAAM,KAAK,GACb,IAAD,IACiB;AACX,QAAM;AAAC,IAAA,MAAD;AAAS,IAAA,OAAT;AAAkB,IAAA;AAAlB,MAA2B,IAAjC;AACA,QAAM;AAAC,IAAA;AAAD,MAAM,MAAZ;AACA,QAAM;AAAC,IAAA,QAAD;AAAW,IAAA;AAAX,MAA4B,KAAlC;AAEA,QAAM,OAAO,GAAG,GAAG,GAAG,OAAN,CAAc,6BAAd,IACZ,IAAI,gBAAJ,CAAqB,CAAC,CAAC,KAAvB,EAA8B,QAA9B,EAAwC,aAAxC,CADY,GAEZ,IAAI,UAAJ,CAAe,CAAC,CAAC,KAAjB,EAAwB,QAAxB,EAAkC,aAAlC,CAFJ;AAGA,QAAM,WAAW,GAAG,OAAO,CAAC,kBAAR,CAA2B,aAA3B,CAApB;AACA,SAAO,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,CAAC,CAAD,CAAjC,EAAsC,CAAC,CAAC,KAAxC,EAA+C,WAA/C,CAAP;AACD,CAZF;AAcP,OAAO,MAAM,WAAW,GAAiB;AACvC,EAAA,UAAU,EAAE,KAD2B;AAEvC,EAAA,WAAW,EAAE,OAF0B;AAGvC,EAAA,UAAU,EAAE;AAH2B,CAAlC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env, KernelConfig, KernelFunc, PadV2, PadV2Attrs, PadV2Inputs, TensorInfo} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {PadProgram} from '../pad_gpu';\nimport {PadPackedProgram} from '../pad_packed_gpu';\n\nexport const padV2 =\n    (args: {inputs: PadV2Inputs, backend: MathBackendWebGL, attrs: PadV2Attrs}):\n        TensorInfo => {\n          const {inputs, backend, attrs} = args;\n          const {x} = inputs;\n          const {paddings, constantValue} = attrs;\n\n          const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n              new PadPackedProgram(x.shape, paddings, constantValue) :\n              new PadProgram(x.shape, paddings, constantValue);\n          const customSetup = program.getCustomSetupFunc(constantValue);\n          return backend.runWebGLProgram(program, [x], x.dtype, customSetup);\n        };\n\nexport const padV2Config: KernelConfig = {\n  kernelName: PadV2,\n  backendName: 'webgl',\n  kernelFunc: padV2 as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}