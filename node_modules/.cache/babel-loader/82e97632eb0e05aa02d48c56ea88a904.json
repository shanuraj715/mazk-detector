{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst {\n  addImpl: addImplCPU,\n  bincountImpl: bincountImplCPU,\n  bincountReduceImpl: bincountReduceImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterImpl: greaterImplCPU,\n  lessImpl: lessImplCPU,\n  linSpaceImpl: linSpaceImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  prodImpl: prodImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  sparseFillEmptyRowsImpl: sparseFillEmptyRowsImplCPU,\n  sparseReshapeImpl: sparseReshapeImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU\n} = shared;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, ceilImplCPU, concatImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherV2ImplCPU, greaterImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, prodImplCPU, simpleAbsImplCPU, sliceImplCPU, sparseFillEmptyRowsImplCPU, sparseReshapeImplCPU, stridedSliceImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU };","map":{"version":3,"sources":["../../src/kernel_utils/shared.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAEH;AACA;AACA;AACA,OAAO,KAAK,MAAZ,MAAwB,0CAAxB;AAQA,MAAM;AACJ,EAAA,OAAO,EAAE,UADL;AAEJ,EAAA,YAAY,EAAE,eAFV;AAGJ,EAAA,kBAAkB,EAAE,qBAHhB;AAIJ,EAAA,QAAQ,EAAE,WAJN;AAKJ,EAAA,UAAU,EAAE,aALR;AAMJ,EAAA,OAAO,EAAE,UANL;AAOJ,EAAA,SAAS,EAAE,YAPP;AAQJ,EAAA,SAAS,EAAE,YARP;AASJ,EAAA,YAAY,EAAE,eATV;AAUJ,EAAA,WAAW,EAAE,cAVT;AAWJ,EAAA,QAAQ,EAAE,WAXN;AAYJ,EAAA,YAAY,EAAE,eAZV;AAaJ,EAAA,OAAO,EAAE,UAbL;AAcJ,EAAA,OAAO,EAAE,UAdL;AAeJ,EAAA,WAAW,EAAE,cAfT;AAgBJ,EAAA,WAAW,EAAE,cAhBT;AAiBJ,EAAA,YAAY,EAAE,eAjBV;AAkBJ,EAAA,OAAO,EAAE,UAlBL;AAmBJ,EAAA,QAAQ,EAAE,WAnBN;AAoBJ,EAAA,SAAS,EAAE,YApBP;AAqBJ,EAAA,SAAS,EAAE,YArBP;AAsBJ,EAAA,aAAa,EAAE,gBAtBX;AAuBJ,EAAA,SAAS,EAAE,YAvBP;AAwBJ,EAAA,uBAAuB,EAAE,0BAxBrB;AAyBJ,EAAA,iBAAiB,EAAE,oBAzBf;AA0BJ,EAAA,gBAAgB,EAAE,mBA1Bd;AA2BJ,EAAA,OAAO,EAAE,UA3BL;AA4BJ,EAAA,QAAQ,EAAE,WA5BN;AA6BJ,EAAA,QAAQ,EAAE,WA7BN;AA8BJ,EAAA,aAAa,EAAE,gBA9BX;AA+BJ,EAAA,UAAU,EAAE;AA/BR,IAgCF,MAhCJ;AAkCA,SACE,UADF,EAEE,eAFF,EAGE,qBAHF,EAIE,WAJF,EAKE,aALF,EAME,UANF,EAOE,YAPF,EAQE,YARF,EASE,eATF,EAUE,cAVF,EAWE,WAXF,EAYE,eAZF,EAaE,UAbF,EAcE,UAdF,EAeE,cAfF,EAgBE,cAhBF,EAiBE,eAjBF,EAkBE,UAlBF,EAmBE,WAnBF,EAoBE,gBApBF,EAqBE,YArBF,EAsBE,0BAtBF,EAuBE,oBAvBF,EAwBE,mBAxBF,EAyBE,UAzBF,EA0BE,YA1BF,EA2BE,YA3BF,EA4BE,WA5BF,EA6BE,WA7BF,EA8BE,gBA9BF,EA+BE,aA/BF","sourcesContent":["\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleBinaryKernelImpl} from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleUnaryImpl} from '@tensorflow/tfjs-backend-cpu/dist/utils/unary_types';\n\nexport type SimpleBinaryKernelImplCPU = SimpleBinaryKernelImpl;\nexport type SimpleUnaryKernelImplCPU = SimpleUnaryImpl;\nconst {\n  addImpl: addImplCPU,\n  bincountImpl: bincountImplCPU,\n  bincountReduceImpl: bincountReduceImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterImpl: greaterImplCPU,\n  lessImpl: lessImplCPU,\n  linSpaceImpl: linSpaceImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  prodImpl: prodImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  sparseFillEmptyRowsImpl: sparseFillEmptyRowsImplCPU,\n  sparseReshapeImpl: sparseReshapeImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU,\n} = shared;\n\nexport {\n  addImplCPU,\n  bincountImplCPU,\n  bincountReduceImplCPU,\n  ceilImplCPU,\n  concatImplCPU,\n  expImplCPU,\n  expm1ImplCPU,\n  floorImplCPU,\n  gatherV2ImplCPU,\n  greaterImplCPU,\n  lessImplCPU,\n  linSpaceImplCPU,\n  logImplCPU,\n  maxImplCPU,\n  maximumImplCPU,\n  minimumImplCPU,\n  multiplyImplCPU,\n  negImplCPU,\n  prodImplCPU,\n  simpleAbsImplCPU,\n  sliceImplCPU,\n  sparseFillEmptyRowsImplCPU,\n  sparseReshapeImplCPU,\n  stridedSliceImplCPU,\n  subImplCPU,\n  rangeImplCPU,\n  rsqrtImplCPU,\n  tileImplCPU,\n  topKImplCPU,\n  transposeImplCPU,\n  uniqueImplCPU,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}