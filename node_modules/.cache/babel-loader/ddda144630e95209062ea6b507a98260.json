{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\maskdetector\\\\src\\\\pages\\\\detect\\\\Detect.js\";\nimport React, { Component } from 'react';\nimport Header from '../../comps/header/Header';\nimport Footer from '../../comps/footer/Footer';\nimport Helmet from 'react-helmet';\nimport conf from '../../config.json';\nimport './detect.css';\nimport fs from 'fs';\nimport * as tf from '@tensorflow/tfjs';\nimport * as mobilenet from '@tensorflow-models/mobilenet';\nimport * as knnClassifier from '@tensorflow-models/knn-classifier';\nimport m1 from '../../images/mask/1.jpg';\nimport m2 from '../../images/mask/2.jpg';\nimport m3 from '../../images/mask/3.jpg';\nimport m4 from '../../images/mask/4.jpg';\nimport m5 from '../../images/mask/5.jpg';\nimport nm1 from '../../images/no_mask/1.jpg';\nimport nm2 from '../../images/no_mask/2.jpg';\nimport nm3 from '../../images/no_mask/3.jpg';\nimport nm4 from '../../images/no_mask/4.jpg';\nimport nm5 from '../../images/no_mask/5.jpg';\nimport nm6 from '../../images/no_mask/6.jpg';\nimport userImage from '../../images/05.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.mobilenewModule = '';\nwindow.classifier = '';\nexport default class Detect extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.start = async () => {\n      console.log('called'); // Predict class for the test image\n\n      const testImage = document.getElementById('test-img');\n      const tfTestImage = tf.browser.fromPixels(testImage);\n      const logits = window.mobilenetModule.infer(tfTestImage, 'conv_preds');\n      const prediction = await window.classifier.predictClass(logits); // Add a border to the test image to display the prediction result\n\n      if (prediction.label == 1) {\n        // no mask - red border\n        console.log(\"False\");\n      } else {\n        // has mask - green border\n        console.log(\"True\");\n      }\n    };\n\n    this.state = {\n      isCameraAccessed: true,\n      isLearning: true\n    };\n\n    this.trainClassifier = async mobilenetModule => {\n      // Create a new KNN Classifier\n      const classifier = knnClassifier.create(); // Train using mask images\n\n      const maskImages = document.querySelectorAll('.mask-img');\n      maskImages.forEach(img => {\n        const tfImg = tf.browser.fromPixels(img);\n        const logits = mobilenetModule.infer(tfImg, 'conv_preds');\n        classifier.addExample(logits, 0); // has mask\n      }); // Train using no mask images\n\n      const noMaskImages = document.querySelectorAll('.no-mask-img');\n      noMaskImages.forEach(img => {\n        const tfImg = tf.browser.fromPixels(img);\n        const logits = mobilenetModule.infer(tfImg, 'conv_preds');\n        classifier.addExample(logits, 1); // no mask\n      });\n      console.log(classifier);\n      return classifier;\n    };\n\n    this.fillImage = () => {\n      let image = document.getElementById('test');\n      let canvas = document.getElementById('canvas');\n      let ctx = canvas.getContext('2d');\n      let img_data = canvas.toDataURL(\"image/jpg\");\n      image.src = img_data;\n      const testImage = document.getElementById('test-img'); // testImage.src = canvas.toDataURL('image/jpg')\n      // let img = canvas.toDataURL('image/jpg')\n\n      this.start();\n    };\n\n    this.captureVideo = () => {\n      var canvas = document.getElementById('canvas');\n      var video = document.getElementById('user-video');\n      console.log(canvas.width, canvas.height);\n      canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n      this.fillImage();\n    };\n\n    this.enableVideo = async () => {\n      let vid = document.getElementById(\"user-video\");\n      const constraints = {\n        audio: false,\n        video: true\n      };\n\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        window.stream = stream;\n        vid.srcObject = stream;\n        vid.play();\n      } catch (e) {}\n    };\n  }\n\n  async componentDidMount() {\n    this.enableVideo(); // Load mobilenet module\n\n    window.mobilenetModule = await mobilenet.load({\n      version: 2,\n      alpha: 1\n    }); // Add examples to the KNN Classifier\n\n    window.classifier = await this.trainClassifier(window.mobilenetModule);\n    window.classifier !== '' && typeof window.classifier === 'object' ? this.setState({\n      isLearning: false\n    }) : null;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: [\"Detect Mask | \", conf.APP_NAME]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), !this.state.isLearning ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"train-images\",\n          style: {\n            'display': 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: m1,\n            className: \"mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: m2,\n            className: \"mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: m3,\n            className: \"mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: m4,\n            className: \"mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: m5,\n            className: \"mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nm1,\n            className: \"no-mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nm2,\n            className: \"no-mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nm3,\n            className: \"no-mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nm4,\n            className: \"no-mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nm5,\n            className: \"no-mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nm6,\n            className: \"no-mask-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"test-img\",\n          crossOrigin: \"anonymous\",\n          src: userImage,\n          style: {\n            'width': '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container mainsection\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col col-12 col-lg-6\",\n                style: {\n                  'display': 'grid',\n                  'placeItems': 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"video\", {\n                  src: \"\",\n                  className: \"w-100\",\n                  id: \"user-video\",\n                  controls: true,\n                  autoPlay: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn mainbtn mt-2\",\n                  onClick: this.captureVideo,\n                  children: \"Capture Image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col col-12 col-lg-6 \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"imgmain\",\n                  children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n                    id: \"canvas\",\n                    className: \"w-100\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"\",\n            id: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/Projects/maskdetector/src/pages/detect/Detect.js"],"names":["React","Component","Header","Footer","Helmet","conf","fs","tf","mobilenet","knnClassifier","m1","m2","m3","m4","m5","nm1","nm2","nm3","nm4","nm5","nm6","userImage","window","mobilenewModule","classifier","Detect","start","console","log","testImage","document","getElementById","tfTestImage","browser","fromPixels","logits","mobilenetModule","infer","prediction","predictClass","label","state","isCameraAccessed","isLearning","trainClassifier","create","maskImages","querySelectorAll","forEach","img","tfImg","addExample","noMaskImages","fillImage","image","canvas","ctx","getContext","img_data","toDataURL","src","captureVideo","video","width","height","drawImage","enableVideo","vid","constraints","audio","stream","navigator","mediaDevices","getUserMedia","srcObject","play","e","componentDidMount","load","version","alpha","setState","render","APP_NAME"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Header from '../../comps/header/Header'\r\nimport Footer from '../../comps/footer/Footer'\r\nimport Helmet from 'react-helmet'\r\nimport conf from '../../config.json'\r\nimport './detect.css'\r\nimport fs from 'fs'\r\n\r\nimport * as tf from '@tensorflow/tfjs'\r\nimport * as mobilenet from '@tensorflow-models/mobilenet'\r\nimport * as knnClassifier from '@tensorflow-models/knn-classifier'\r\n\r\n\r\nimport m1 from '../../images/mask/1.jpg'\r\nimport m2 from '../../images/mask/2.jpg'\r\nimport m3 from '../../images/mask/3.jpg'\r\nimport m4 from '../../images/mask/4.jpg'\r\nimport m5 from '../../images/mask/5.jpg'\r\n\r\nimport nm1 from '../../images/no_mask/1.jpg'\r\nimport nm2 from '../../images/no_mask/2.jpg'\r\nimport nm3 from '../../images/no_mask/3.jpg'\r\nimport nm4 from '../../images/no_mask/4.jpg'\r\nimport nm5 from '../../images/no_mask/5.jpg'\r\nimport nm6 from '../../images/no_mask/6.jpg'\r\n\r\nimport userImage from '../../images/05.jpg'\r\n\r\nwindow.mobilenewModule = ''\r\nwindow.classifier = ''\r\n\r\nexport default class Detect extends Component {\r\n\r\n    async componentDidMount(){\r\n        this.enableVideo()\r\n\r\n        // Load mobilenet module\r\n        window.mobilenetModule = await mobilenet.load({version: 2, alpha: 1});\r\n        // Add examples to the KNN Classifier\r\n        window.classifier = await this.trainClassifier(window.mobilenetModule);\r\n        window.classifier !== '' && typeof window.classifier === 'object' ? this.setState({ isLearning: false }) : null\r\n    }\r\n\r\n    start = async () => {\r\n        console.log( 'called' )\r\n        \r\n\r\n        // Predict class for the test image\r\n        const testImage = document.getElementById('test-img');\r\n        const tfTestImage = tf.browser.fromPixels(testImage);\r\n        const logits = window.mobilenetModule.infer(tfTestImage, 'conv_preds');\r\n        const prediction = await window.classifier.predictClass(logits);\r\n\r\n        // Add a border to the test image to display the prediction result\r\n        if (prediction.label == 1) { // no mask - red border\r\n            console.log(\"False\")\r\n        } else { // has mask - green border\r\n            console.log(\"True\")\r\n        }\r\n    }\r\n\r\n    state = {\r\n        isCameraAccessed: true,\r\n        isLearning: true\r\n    }\r\n\r\n    trainClassifier = async (mobilenetModule) => {\r\n        // Create a new KNN Classifier\r\n        const classifier = knnClassifier.create();\r\n\r\n        // Train using mask images\r\n        const maskImages = document.querySelectorAll('.mask-img');\r\n        maskImages.forEach(img => {\r\n            const tfImg = tf.browser.fromPixels(img);\r\n            const logits = mobilenetModule.infer(tfImg, 'conv_preds');\r\n            classifier.addExample(logits, 0); // has mask\r\n        });\r\n        // Train using no mask images\r\n        const noMaskImages = document.querySelectorAll('.no-mask-img');\r\n        noMaskImages.forEach(img => {\r\n            const tfImg = tf.browser.fromPixels(img);\r\n            const logits = mobilenetModule.infer(tfImg, 'conv_preds');\r\n            classifier.addExample(logits, 1); // no mask\r\n        });\r\n        console.log( classifier )\r\n        return classifier;\r\n    }\r\n\r\n    fillImage = () => {\r\n        let image = document.getElementById('test')\r\n        let canvas = document.getElementById('canvas')\r\n        let ctx = canvas.getContext('2d')\r\n        let img_data = canvas.toDataURL(\"image/jpg\")\r\n        image.src = img_data\r\n        \r\n\r\n        const testImage = document.getElementById('test-img');\r\n        // testImage.src = canvas.toDataURL('image/jpg')\r\n        // let img = canvas.toDataURL('image/jpg')\r\n        \r\n        this.start()\r\n    }\r\n\r\n    captureVideo = () => {\r\n        var canvas = document.getElementById('canvas');\r\n        var video = document.getElementById('user-video');\r\n        console.log( canvas.width, canvas.height)\r\n        \r\n        canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n        this.fillImage()\r\n    }\r\n\r\n    enableVideo = async () => {\r\n        let vid = document.getElementById(\"user-video\")\r\n        const constraints = {\r\n            audio: false,\r\n            video: true\r\n        }\r\n        try{\r\n            const stream = await navigator.mediaDevices.getUserMedia( constraints )\r\n            window.stream = stream\r\n            vid.srcObject = stream\r\n            vid.play()\r\n        }\r\n        catch( e ){\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Helmet>\r\n                    <title>Detect Mask | {conf.APP_NAME}</title>\r\n                </Helmet>\r\n                { !this.state.isLearning ? \r\n                <React.Fragment>\r\n                    <Header />\r\n                    <div className=\"train-images\" style={{'display': 'none'}}>\r\n                        <img src={ m1 } className=\"mask-img\" />\r\n                        <img src={ m2 } className=\"mask-img\" />\r\n                        <img src={ m3 } className=\"mask-img\" />\r\n                        <img src={ m4 } className=\"mask-img\" />\r\n                        <img src={ m5 } className=\"mask-img\" />\r\n\r\n                        \r\n                        <img src={ nm1 } className=\"no-mask-img\" />\r\n                        <img src={ nm2 } className=\"no-mask-img\" />\r\n                        <img src={ nm3 } className=\"no-mask-img\" />\r\n                        <img src={ nm4 } className=\"no-mask-img\" />\r\n                        <img src={ nm5 } className=\"no-mask-img\" />\r\n                        <img src={ nm6 } className=\"no-mask-img\" />\r\n\r\n\r\n                    </div>\r\n                    <img id=\"test-img\" crossOrigin=\"anonymous\" src={ userImage }  style={{'width': '200px'}} />\r\n                    <section>\r\n                        <div className=\"container mainsection\">\r\n                            <div className=\"row\">\r\n                            <div className=\"col col-12 col-lg-6\" style={{'display': 'grid', 'placeItems': 'center'}}>\r\n                                \r\n                                <video src='' className=\"w-100\" id=\"user-video\" controls={ true } autoPlay={ false } />\r\n                                <button type=\"button\" className=\"btn mainbtn mt-2\" onClick={ this.captureVideo }>\r\n                                    Capture Image\r\n                                </button>\r\n                                <br />\r\n                            </div>\r\n\r\n                            <div className=\"col col-12 col-lg-6 \">\r\n                                <div className=\"imgmain\">\r\n                                    <canvas id=\"canvas\" className=\"w-100\"></canvas>\r\n                                {/* <img src={Mainbg} className=\"img-fluid homecol\" id=\"user-img\" alt=\"...\" /> */}\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <img src=\"\" id=\"test\" />\r\n                    </section>\r\n                    <Footer />\r\n                </React.Fragment>\r\n                : null }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}